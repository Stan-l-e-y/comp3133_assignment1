type User @entity {
  id: String! @id
  username: String! @column
  email: String! @column
  password: String! @column
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

type Employee @entity {
  id: String @id
  first_name: String! @column
  last_name: String! @column
  email: String! @column
  gender: String! @column
  salary: Float! @column
}

input AddEmployeeInput {
  first_name: String!
  last_name: String!
  email: String!
  gender: Gender!
  salary: Float!
}

input SignUpInput {
  username: String!
  email: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}

input EmployeeUpdateInput {
  first_name: String
  last_name: String
  email: String
  gender: Gender
  salary: Float
}

type Query {
  login(loginInput: LoginInput): String!
  getAllEmployees: [Employee]!
  getEmployee(id: String!): Employee
}

type Mutation {
  signUp(signUpInput: SignUpInput): User!
  addEmployee(addEmployeeInput: AddEmployeeInput): Employee!
  updateEmployee(id: String!, updateInput: EmployeeUpdateInput): Employee
  deleteEmpoyee(id: String!): String!
}
